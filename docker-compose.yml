version: "3.8"

services:
  dynamodb-local:
    image: amazon/dynamodb-local:latest
    container_name: dynamodb-local
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath ./data"
    working_dir: /home/dynamodblocal
    volumes:
      - db_data:/home/dynamodblocal/data
    ports:
      - "8000:8000"
    user: root

  dynamodb-init:
    image: amazon/aws-cli
    depends_on:
      - dynamodb-local
    volumes:
      - ~/.aws/credentials:/root/.aws/credentials:ro
      - ./api/users-dynamodb-schema.json:/users-dynamodb-schema.json:ro
      - ./api/businesses-dynamodb-schema.json:/businesses-dynamodb-schema.json:ro
    entrypoint: ""
    command: |
      bash -c "
        echo 'Waiting for DynamoDB Local to be ready...';
        until curl -s http://dynamodb-local:8000 > /dev/null; do
          echo 'DynamoDB Local not yet ready, retrying in 3s...';
          sleep 3;
        done;
        echo 'DynamoDB Local is ready!';

        echo 'Creating users-table-local...';
        aws dynamodb create-table --cli-input-json file:///users-dynamodb-schema.json --endpoint-url http://dynamodb-local:8000 --region us-east-1;

        echo 'Creating businesses-table-local...';
        aws dynamodb create-table --cli-input-json file:///businesses-dynamodb-schema.json --endpoint-url http://dynamodb-local:8000 --region us-east-1;

        echo 'Tables created successfully:';
        aws dynamodb list-tables --endpoint-url http://dynamodb-local:8000 --region us-east-1;
      "

  dynamodb-admin:
    image: aaronshaf/dynamodb-admin
    depends_on:
      - dynamodb-local
    environment:
      - DYNAMO_ENDPOINT=http://dynamodb-local:8000
    ports:
      - "8008:8001"

  wiremock:
    image: node:22-bullseye
    platform: linux/amd64
    volumes:
      - .:/workspace
      - wiremock_modules:/root/.jdeploy
    working_dir: /workspace/apis
    ports:
      - "9000:9000"
    environment:
      - PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
    command: |
      bash -c "
        apt-get update && \
        apt-get install -y build-essential python3 libnss3 libxss1 libatk1.0-0 libgtk-3-0 libgbm-dev libasound2 libxtst6 xauth xvfb default-jre && \
        yarn install --frozen-lockfile && \
        yarn start:wiremock
      "

  api:
    image: node:22-bullseye
    depends_on:
      dynamodb-init:
        condition: service_completed_successfully
    volumes:
      - ~/.aws/credentials:/root/.aws/credentials:ro
      - ./:/workspace
      - ./scripts:/workspace/scripts
      - api_node_modules:/workspace/api/node_modules
    working_dir: /workspace/api
    ports:
      - "5002:5002"
    env_file:
      - .env
    environment:
      - AWS_ACCESS_KEY_ID=local
      - AWS_REGION=us-east-1
      - AWS_SECRET_ACCESS_KEY=local
      - IS_DOCKER=true
      - DYNAMODB_ENDPOINT=http://dynamodb-local:8000
      - DYNAMODB_PORT=8000
    command: bash -c "./scripts/start-all-lambdas.sh"

  web:
    image: node:22-bullseye
    depends_on:
      - api
    stdin_open: true
    volumes:
      - ./:/workspace
      - web_node_modules:/workspace/node_modules
    working_dir: /workspace/web
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - npm_config_platform=linux
      - npm_config_arch=x64
      - npm_config_build_from_source=true
    command:
      bash -c "apt-get update && apt-get install -y python3 make g++ && yarn install && yarn dev"

volumes:
  db_data: {}
  web_node_modules: {}
  api_node_modules: {}
  wiremock_modules: {}

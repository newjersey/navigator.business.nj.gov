name: Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: ðŸ›’ Checkout code
        uses: actions/checkout@v2

      - name: ðŸ“¦ Tar files
        run: tar -cvf source-${{ github.sha }}.tar .

      - name: ðŸ“¬ Caching
        uses: actions/cache@v2
        with:
          path: |
            **/node_modules
            ${{ github.workspace }}/web/.next/cache
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

      - name: ðŸ”§ Use Node.js 14.x
        uses: actions/setup-node@v2
        with:
          node-version: 14.x

      - name: ðŸ”§ Set up JDK for dynamodb-local
        uses: actions/setup-java@v2
        with:
          distribution: "zulu"
          java-version: 13

      - name: ðŸ§° Install npm dependencies
        run: npm install

      - name: ðŸ§° Install Amplify CLI
        run: npm install -g @aws-amplify/cli

      - name: ðŸ”§ Configure Amplify
        run: ./scripts/amplify-ci/configure.sh
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_INNOV }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_INNOV }}
          AWS_REGION: us-east-1
          AMPLIFY_ENV: dev

      - name: ðŸ”§ Serverless Authentication
        run: npm run serverless config credentials -- --provider aws --key ${{secrets.AWS_ACCESS_KEY_ID_INNOV}} --secret ${{secrets.AWS_SECRET_ACCESS_KEY_INNOV}}
        working-directory: api

      - name: ðŸ§¹ Run typechecking
        run: npm run typecheck

      - name: ðŸ§¹ Run lint
        run: npm run lint

      - name: ðŸ§¹ Run prettier
        run: npm run prettier:check

      - name: ðŸ§ª Run web tests
        run: npm --prefix=web run test
      - name: ðŸ§ª Run API tests
        run: npm --prefix=api run test

      - name: ðŸ”§ Build project for e2e tests
        run: npm --prefix=api run install-dynamo-local && npm --prefix=api start & npm --prefix=api run start:wiremock & npm --prefix=web run build --if-present
        env:
          API_BASE_URL: http://localhost:5000/dev
          AUTH_DOMAIN: ${{ secrets.COGNITO_AUTH_DOMAIN_DEV }}
          REDIRECT_URL: http://localhost:3000/
          COGNITO_WEB_CLIENT_ID: ${{ secrets.COGNITO_WEB_CLIENT_ID_DEV }}
          MYNJ_PROFILE_LINK: https://myt1.state.nj.us/portal/Desktop

      - name: ðŸ§ª Run e2e cypress tests
        uses: cypress-io/github-action@v2
        with:
          working-directory: web
          start: npm start
          wait-on: "http://localhost:3000"
          record: true
        env:
          CYPRESS_API_BASE_URL: http://localhost:5000/dev
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          CYPRESS_TEST_USER_EMAIL: ${{ secrets.CYPRESS_TEST_USER_EMAIL }}
          CYPRESS_TEST_USER_PASSWORD: ${{ secrets.CYPRESS_TEST_USER_PASSWORD }}
          CYPRESS_AWS_COGNITO_IDENTITY_POOL_ID: ${{ secrets.CYPRESS_AWS_COGNITO_IDENTITY_POOL_ID }}
          CYPRESS_AWS_USER_POOLS_ID: ${{ secrets.CYPRESS_AWS_USER_POOLS_ID }}
          CYPRESS_AWS_USER_POOLS_WEB_CLIENT_ID: ${{ secrets.CYPRESS_AWS_USER_POOLS_WEB_CLIENT_ID }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: ðŸ“¦ Publish source-code artifact
        uses: actions/upload-artifact@v2
        with:
          name: source-${{ github.sha }}
          path: ./source-${{ github.sha }}.tar

  deploy-dev:
    runs-on: ubuntu-latest
    needs: build-and-test
    environment:
      name: dev
    steps:
      - name: ðŸ“¦ Download source package
        uses: actions/download-artifact@v2
        with:
          name: source-${{ github.sha }}
          path: ${{ github.workspace }}

      - name: ðŸ“¦ Untar source package
        run: tar -xvf source-${{ github.sha }}.tar

      - name: ðŸ“¬ Caching
        uses: actions/cache@v2
        with:
          path: |
            **/node_modules
            ${{ github.workspace }}/web/.next/cache
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

      - name: ðŸ”§ Use Node.js 14.x
        uses: actions/setup-node@v2
        with:
          node-version: 14.x

      - name: ðŸ§° Install Amplify CLI
        run: npm install -g @aws-amplify/cli

      - name: ðŸ”§ Configure Amplify
        run: ./scripts/amplify-ci/configure.sh
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_INNOV }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_INNOV }}
          AWS_REGION: us-east-1
          AMPLIFY_ENV: dev

      - name: ðŸ§° Install web dependencies
        run: npm --prefix=web install
      - name: ðŸ§° Install api dependencies
        run: npm --prefix=api install

      - name: ðŸ”§ Serverless Authentication
        run: npm run serverless config credentials -- --provider aws --key ${{secrets.AWS_ACCESS_KEY_ID_INNOV}} --secret ${{secrets.AWS_SECRET_ACCESS_KEY_INNOV}}
        working-directory: api

      - name: ðŸš€ Deploy api with serverless
        run: npm run serverless deploy -- --verbose --stage dev --region us-east-1
        working-directory: ./api
        env:
          STAGE: dev
          COGNITO_ARN: ${{ secrets.COGNITO_ARN_DEV }}
          VPC_SECURITY_GROUP_ID: ${{ secrets.VPC_SECURITY_GROUP_ID }}
          VPC_SUBNET_ID_1: ${{ secrets.VPC_SUBNET_ID_1 }}
          VPC_SUBNET_ID_2: ${{ secrets.VPC_SUBNET_ID_2 }}
          VPC_ID: ${{ secrets.VPC_ID }}
          USE_FAKE_LICENSE_CLIENT: ${{ secrets.USE_FAKE_LICENSE_CLIENT }}
          LICENSE_STATUS_BASE_URL: ${{ secrets.LICENSE_STATUS_BASE_URL_DEV }}
          MYNJ_SERVICE_TOKEN: ${{ secrets.MYNJ_SERVICE_TOKEN_DEV }}
          MYNJ_ROLE_NAME: ${{ secrets.MYNJ_ROLE_NAME_DEV }}
          MYNJ_SERVICE_URL: ${{ secrets.MYNJ_SERVICE_URL_DEV }}
          MYNJ_CERT_PASSPHRASE: ${{ secrets.MYNJ_CERT_PASSPHRASE_DEV }}
          BUSINESS_NAME_BASE_URL: ${{ secrets.BUSINESS_NAME_BASE_URL_DEV }}
          AWS_SECRET_ID: MYNJ_CERTS_DEV

      - name: ðŸš€ Deploy web to AWS Amplify
        run: ./scripts/amplify-ci/publish.sh
        env:
          API_BASE_URL: ${{ secrets.API_BASE_URL_AWS_DEV }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_INNOV }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_INNOV }}
          AWS_REGION: us-east-1
          AMPLIFY_ENV: dev
          AUTH_DOMAIN: ${{ secrets.COGNITO_AUTH_DOMAIN_DEV }}
          REDIRECT_URL: ${{ secrets.REDIRECT_URL_DEV }}
          GOOGLE_ANALYTICS_ID: ${{ secrets.GOOGLE_ANALYTICS_ID }}
          COGNITO_WEB_CLIENT_ID: ${{ secrets.COGNITO_WEB_CLIENT_ID_DEV }}
          MYNJ_PROFILE_LINK: https://myt1.state.nj.us/portal/Desktop

  deploy-staging:
    runs-on: ubuntu-latest
    needs: deploy-dev
    environment:
      name: staging
    steps:
      - name: ðŸ“¦ Download source package
        uses: actions/download-artifact@v2
        with:
          name: source-${{ github.sha }}
          path: ${{ github.workspace }}

      - name: ðŸ“¦ Untar source package
        run: tar -xvf source-${{ github.sha }}.tar

      - name: ðŸ“¬ Caching
        uses: actions/cache@v2
        with:
          path: |
            **/node_modules
            ${{ github.workspace }}/web/.next/cache
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

      - name: ðŸ”§ Use Node.js 14.x
        uses: actions/setup-node@v2
        with:
          node-version: 14.x

      - name: ðŸ§° Install Amplify CLI
        run: npm install -g @aws-amplify/cli

      - name: ðŸ”§ Configure Amplify
        run: ./scripts/amplify-ci/configure.sh
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_INNOV }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_INNOV }}
          AWS_REGION: us-east-1
          AMPLIFY_ENV: staging

      - name: ðŸ§° Install web dependencies
        run: npm --prefix=web install
      - name: ðŸ§° Install api dependencies
        run: npm --prefix=api install

      - name: ðŸ”§ Serverless Authentication
        run: npm run serverless config credentials -- --provider aws --key ${{secrets.AWS_ACCESS_KEY_ID_INNOV}} --secret ${{secrets.AWS_SECRET_ACCESS_KEY_INNOV}}
        working-directory: api

      - name: ðŸš€ Deploy api with serverless
        run: npm run serverless deploy -- --verbose --stage staging --region us-east-1
        working-directory: ./api
        env:
          STAGE: staging
          COGNITO_ARN: ${{ secrets.COGNITO_ARN_STAGING }}
          VPC_SECURITY_GROUP_ID: ${{ secrets.VPC_SECURITY_GROUP_ID }}
          VPC_SUBNET_ID_1: ${{ secrets.VPC_SUBNET_ID_1 }}
          VPC_SUBNET_ID_2: ${{ secrets.VPC_SUBNET_ID_2 }}
          VPC_ID: ${{ secrets.VPC_ID }}
          USE_FAKE_LICENSE_CLIENT: ${{ secrets.USE_FAKE_LICENSE_CLIENT }}
          LICENSE_STATUS_BASE_URL: ${{ secrets.LICENSE_STATUS_BASE_URL_STAGING }}
          MYNJ_SERVICE_TOKEN: ${{ secrets.MYNJ_SERVICE_TOKEN_STAGING }}
          MYNJ_ROLE_NAME: ${{ secrets.MYNJ_ROLE_NAME_STAGING }}
          MYNJ_SERVICE_URL: ${{ secrets.MYNJ_SERVICE_URL_STAGING }}
          MYNJ_CERT_PASSPHRASE: ${{ secrets.MYNJ_CERT_PASSPHRASE_STAGING }}
          BUSINESS_NAME_BASE_URL: ${{ secrets.BUSINESS_NAME_BASE_URL_STAGING }}
          AWS_SECRET_ID: MYNJ_CERTS_STAGING

      - name: ðŸš€ Deploy web to AWS Amplify
        run: ./scripts/amplify-ci/publish.sh
        env:
          API_BASE_URL: ${{ secrets.API_BASE_URL_AWS_STAGING }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_INNOV }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_INNOV }}
          AWS_REGION: us-east-1
          AMPLIFY_ENV: staging
          AUTH_DOMAIN: ${{ secrets.COGNITO_AUTH_DOMAIN_STAGING }}
          REDIRECT_URL: ${{ secrets.REDIRECT_URL_STAGING }}
          GOOGLE_ANALYTICS_ID: ${{ secrets.GOOGLE_ANALYTICS_ID }}
          COGNITO_WEB_CLIENT_ID: ${{ secrets.COGNITO_WEB_CLIENT_ID_STAGING }}
          MYNJ_PROFILE_LINK: https://myt1.state.nj.us/portal/Desktop

  deploy-prod:
    runs-on: ubuntu-latest
    needs: deploy-staging
    environment:
      name: prod
    steps:
      - name: ðŸ“¦ Download source package
        uses: actions/download-artifact@v2
        with:
          name: source-${{ github.sha }}
          path: ${{ github.workspace }}

      - name: ðŸ“¦ Untar source package
        run: tar -xvf source-${{ github.sha }}.tar

      - name: ðŸ“¬ Caching
        uses: actions/cache@v2
        with:
          path: |
            **/node_modules
            ${{ github.workspace }}/web/.next/cache
          key: ${{ runner.os }}-modules-${{ hashFiles('**/package-lock.json') }}

      - name: ðŸ”§ Use Node.js 14.x
        uses: actions/setup-node@v2
        with:
          node-version: 14.x

      - name: ðŸ§° Install Amplify CLI
        run: npm install -g @aws-amplify/cli

      - name: ðŸ”§ Configure Amplify
        run: ./scripts/amplify-ci/configure.sh
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_INNOV }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_INNOV }}
          AWS_REGION: us-east-1
          AMPLIFY_ENV: prod

      - name: ðŸ§° Install web dependencies
        run: npm --prefix=web install
      - name: ðŸ§° Install api dependencies
        run: npm --prefix=api install

      - name: ðŸ”§ Serverless Authentication
        run: npm run serverless config credentials -- --provider aws --key ${{secrets.AWS_ACCESS_KEY_ID_INNOV}} --secret ${{secrets.AWS_SECRET_ACCESS_KEY_INNOV}}
        working-directory: api

      - name: ðŸš€ Deploy api with serverless
        run: npm run serverless deploy -- --verbose --stage prod --region us-east-1
        working-directory: ./api
        env:
          STAGE: prod
          COGNITO_ARN: ${{ secrets.COGNITO_ARN_PROD }}
          VPC_SECURITY_GROUP_ID: ${{ secrets.VPC_SECURITY_GROUP_ID_PROD }}
          VPC_SUBNET_ID_1: ${{ secrets.VPC_SUBNET_ID_1_PROD }}
          VPC_SUBNET_ID_2: ${{ secrets.VPC_SUBNET_ID_2_PROD }}
          VPC_ID: ${{ secrets.VPC_ID }}
          USE_FAKE_LICENSE_CLIENT: ${{ secrets.USE_FAKE_LICENSE_CLIENT }}
          LICENSE_STATUS_BASE_URL: ${{ secrets.LICENSE_STATUS_BASE_URL_PROD }}
          MYNJ_SERVICE_TOKEN: ${{ secrets.MYNJ_SERVICE_TOKEN_PROD }}
          MYNJ_ROLE_NAME: ${{ secrets.MYNJ_ROLE_NAME_PROD }}
          MYNJ_SERVICE_URL: ${{ secrets.MYNJ_SERVICE_URL_PROD }}
          MYNJ_CERT_PASSPHRASE: ${{ secrets.MYNJ_CERT_PASSPHRASE_PROD }}
          BUSINESS_NAME_BASE_URL: ${{ secrets.BUSINESS_NAME_BASE_URL_PROD }}
          AWS_SECRET_ID: MYNJ_CERTS_PROD

      - name: ðŸš€ Deploy web to AWS Amplify
        run: ./scripts/amplify-ci/publish.sh
        env:
          API_BASE_URL: ${{ secrets.API_BASE_URL_AWS_PROD }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_INNOV }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_INNOV }}
          AWS_REGION: us-east-1
          AMPLIFY_ENV: prod
          AUTH_DOMAIN: ${{ secrets.COGNITO_AUTH_DOMAIN_PROD }}
          REDIRECT_URL: ${{ secrets.REDIRECT_URL_PROD }}
          GOOGLE_ANALYTICS_ID: ${{ secrets.GOOGLE_ANALYTICS_ID }}
          COGNITO_WEB_CLIENT_ID: ${{ secrets.COGNITO_WEB_CLIENT_ID_PROD }}
          MYNJ_PROFILE_LINK: https://my.state.nj.us/portal/Desktop
